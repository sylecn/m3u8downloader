server {
    listen 80;
    server_name m3u8downloader;
    server_tokens off;
    return 301 https://$host$request_uri;
}

server {
    server_name m3u8downloader;

    listen 443 ssl;
    # cert and key should have owner root:ssl-cert, mode 640.
    ssl_certificate /etc/ssl/private/m3u8downloader.crt;
    ssl_certificate_key /etc/ssl/private/m3u8downloader.key;

    ssl_protocols SSLv3 TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers RC4:HIGH:!aNULL:!MD5;
    ssl_prefer_server_ciphers on;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;

    access_log /var/log/nginx/m3u8downloader.log main;
    error_log /var/log/nginx/m3u8downloader.err warn;

    ssi on;
    charset utf-8;
    client_max_body_size 30m;
    client_header_buffer_size 16k;
    large_client_header_buffers 16 64k;
    server_tokens off;

    error_page 500 502 503 504 /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }

    root /usr/share/nginx/html;

    gzip on;
    # text/html is built-in.
    gzip_types text/plain application/xml text/xml application/x-rss+xml application/xhtml+xml text/css application/javascript application/x-javascript application/json;
    gzip_comp_level 3;
    gzip_min_length 1400;
    gzip_vary on;

    # allow 127.0.0.1;
    # deny all;

    location /static/ {
    }

    location / {
        proxy_pass http://127.0.0.1:8082;
        proxy_http_version 1.1;
        proxy_set_header Connection "";
        proxy_redirect off;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }

    # location / {
    #     include uwsgi_params;
    #     uwsgi_pass 127.0.0.1:8082;
    #     uwsgi_read_timeout 300;
    #     uwsgi_send_timeout 300;
    # }
}
